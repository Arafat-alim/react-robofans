{"version":3,"sources":["reportWebVitals.js","Components/Cards.jsx","Components/CardList.jsx","Components/SearchBox.jsx","Components/Scroll.jsx","Components/Popup.jsx","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Cards","id","name","email","username","className","src","alt","CardList","robots","map","user","index","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","marginTop","padding","cursor","children","Popup","closePopup","onClick","App","changeMessage","alert","event","setState","searchfield","target","value","openPopup","popup","state","message","a","fetch","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","length","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MAYeA,G,YAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,0DCQCQ,EAbD,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,GAAIC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAChC,OACE,sBAAKC,UAAU,+CAAf,UACE,qBAAKC,IAAG,+BAA0BL,EAA1B,YAAwCM,IAAI,WACpD,gCACE,yCAAYL,KACZ,6CAAgBE,KAChB,0CAAaD,YC6CNK,EAjDE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAWlB,OACE,8BAsBGA,EAAOC,KAAI,SAACC,EAAMC,GACjB,OACE,cAAC,EAAD,CAEEX,GAAIQ,EAAOG,GAAOX,GAClBC,KAAMO,EAAOG,GAAOV,KACpBC,MAAOM,EAAOG,GAAOT,MACrBC,SAAUK,EAAOG,GAAOR,UAJnBQ,SC3BFC,EAbG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACnB,OACE,8BACE,uBACEC,KAAK,OACLC,YAAY,cACZC,SAAUH,EACVT,UAAU,mCCUHa,EAjBA,SAACC,GACd,OACE,qBACEC,MAAO,CACLC,UAAW,SACXC,OAAQ,kBACRC,OAAQ,QACRC,UAAW,OACXC,QAAS,OACTC,OAAQ,WAPZ,SAUGP,EAAMQ,Y,MCCEC,MAZf,YAAgC,IAAfC,EAAc,EAAdA,WACf,OACE,qBAAKxB,UAAU,cAAf,SACE,qBAAKA,UAAU,iBAAf,SACE,qBAAKA,UAAU,eAAeyB,QAASD,EAAvC,oBCuEOE,E,kDAtEb,aAAe,IAAD,8BACZ,gBAcFC,cAAgB,WAEdC,MAAM,SAjBM,EAmBdnB,aAAe,SAACoB,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SApB9B,EAoCdC,UAAY,WACV,EAAKJ,SAAS,CAAEK,OAAO,KArCX,EAwCdX,WAAa,WACX,EAAKM,SAAS,CAAEK,OAAO,KAtCvB,EAAKC,MAAQ,CACXC,QAAS,+BACTjC,OAAQ,GACR2B,YAAa,GACbI,OAAO,GAPG,E,4FAwBd,iCAAAG,EAAA,sEAEQC,MAAM,8CACTlD,MAAK,SAACmD,GACL,OAAOA,EAASC,UAEjBpD,MAAK,SAACqD,GACL,EAAKZ,SAAS,CAAE1B,OAAQsC,OAP9B,2C,0EAmBA,WACE,MAAgDC,KAAKP,MAA7ChC,EAAR,EAAQA,OAAQ2B,EAAhB,EAAgBA,YAAaM,EAA7B,EAA6BA,QAASF,EAAtC,EAAsCA,MAChCS,EAAiBxC,EAAOyC,QAAO,SAACC,GACpC,OAAOA,EAAMjD,KAAKkD,cAAcC,SAASjB,EAAYgB,kBAGvD,OAAQH,EAAeK,OAGrB,qCACGd,EAAQ,cAAC,EAAD,CAAOX,WAAYmB,KAAKnB,aAAiB,GAClD,sBAAKxB,UAAU,KAAf,UACE,2CACA,6BAAKqC,IAEL,wBAAQZ,QAASkB,KAAKT,UAAtB,+BACA,cAAC,EAAD,CAAWzB,aAAckC,KAAKlC,eAC9B,cAAC,EAAD,UACE,cAAC,EAAD,CAAUL,OAAQwC,YAXxB,kD,GApDYM,a,MCGlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BrE,M","file":"static/js/main.68ac4a5a.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\n\r\nconst Cards = ({ id, name, email, username }) => {\r\n  return (\r\n    <div className=\"bg-light-green dib pa3 ma2 grow bw2 shadow-5\">\r\n      <img src={`https://robohash.org/${id}?200x200`} alt=\"robots\" />\r\n      <div>\r\n        <h2>Name - {name}</h2>\r\n        <h3>Username - {username}</h3>\r\n        <h3>Email - {email}</h3>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import React from \"react\";\r\nimport Cards from \"./Cards\";\r\n\r\n//!Note calling component all time is not correct for us\r\n\r\nconst CardList = ({ robots }) => {\r\n  //   const cardComponent = robots.map((user, index) => {\r\n  //     return (\r\n  //       <Cards\r\n  //         id={robots[index].id}\r\n  //         name={robots[index].name}\r\n  //         email={robots[index].email}\r\n  //         username={robots[index].username}\r\n  //       />\r\n  //     );\r\n  //   });\r\n  return (\r\n    <div>\r\n      {/* <Cards\r\n        id={robots[0].id}\r\n        name={robots[0].name}\r\n        email={robots[0].email}\r\n        username={robots[0].username}\r\n      />\r\n      <Cards\r\n        id={robots[1].id}\r\n        name={robots[1].name}\r\n        email={robots[1].email}\r\n        username={robots[1].username}\r\n      />\r\n      <Cards\r\n        id={robots[2].id}\r\n        name={robots[2].name}\r\n        email={robots[2].email}\r\n        username={robots[2].username}\r\n      /> */}\r\n      {/* {cardComponent} */}\r\n      {/*! Second method to do the same thing */}\r\n\r\n      {robots.map((user, index) => {\r\n        return (\r\n          <Cards\r\n            key={index}\r\n            id={robots[index].id}\r\n            name={robots[index].name}\r\n            email={robots[index].email}\r\n            username={robots[index].username}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n\r\n//this is the parent COmponent\r\n","import React from \"react\";\r\n\r\nconst SearchBox = ({ searchChange }) => {\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search Here\"\r\n        onChange={searchChange}\r\n        className=\"pa3 ba b-blue bg-light-blue\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        overflowY: \"scroll\",\r\n        border: \"2px solid black\",\r\n        height: \"500px\",\r\n        marginTop: \"10px\",\r\n        padding: \"10px\",\r\n        cursor: \"pointer\",\r\n      }}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scroll;\r\n","import React from \"react\";\r\nimport \"./popup.css\";\r\n\r\nfunction Popup({ closePopup }) {\r\n  return (\r\n    <div className=\"popup--back\">\r\n      <div className=\"popup--content\">\r\n        <div className=\"popup--close\" onClick={closePopup}>\r\n          x\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Popup;\r\n","import React, { Component } from \"react\";\r\nimport CardList from \"../Components/CardList\";\r\nimport SearchBox from \"../Components/SearchBox\";\r\nimport Scroll from \"../Components/Scroll\";\r\nimport Popup from \"../Components/Popup\";\r\n//changing my functional component app into class component\r\nclass App extends Component {\r\n  //whenever i use state put into the componentn with using constructor\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      message: \"Boom!! YOur Robots are Here!\",\r\n      robots: [],\r\n      searchfield: \"\",\r\n      popup: false,\r\n    };\r\n  }\r\n  // changeMessage = () => {\r\n  //   // this.state.message = \"You have subscribed successfully\"; // cant mutate directly we used setState()\r\n  //   this.setState({ message: \"You have succefully subscribed\" });\r\n  // };\r\n\r\n  changeMessage = () => {\r\n    // this.setState({ message: \"No record found\" });\r\n    alert(\"oops\");\r\n  };\r\n  searchChange = (event) => {\r\n    this.setState({ searchfield: event.target.value });\r\n\r\n    // robots.length === 0 ? \"No robots found\" : filteredRobots;\r\n  };\r\n  async componentDidMount() {\r\n    //fetching my api from here\r\n    await fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((users) => {\r\n        this.setState({ robots: users });\r\n      });\r\n  }\r\n\r\n  //Pop-Up\r\n  openPopup = () => {\r\n    this.setState({ popup: true });\r\n  };\r\n\r\n  closePopup = () => {\r\n    this.setState({ popup: false });\r\n  };\r\n  render() {\r\n    const { robots, searchfield, message, popup } = this.state;\r\n    const filteredRobots = robots.filter((robot) => {\r\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n    });\r\n\r\n    return !filteredRobots.length ? (\r\n      <h1>Loading ....</h1>\r\n    ) : (\r\n      <>\r\n        {popup ? <Popup closePopup={this.closePopup} /> : \"\"}\r\n        <div className=\"tc\">\r\n          <h1>Robo Fans</h1>\r\n          <h1>{message}</h1>\r\n          {/* <button onClick={this.changeMessage}>Subscribe here!</button> */}\r\n          <button onClick={this.openPopup}>Open Popup Button</button>\r\n          <SearchBox searchChange={this.searchChange} />\r\n          <Scroll>\r\n            <CardList robots={filteredRobots} />\r\n          </Scroll>\r\n          {/* {filteredRobots.length === 0 ? this.changeMessage : \"\"} */}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport tachyons from \"tachyons\";\n\nimport reportWebVitals from \"./reportWebVitals\";\nimport App from \"./containers/App.js\";\nimport \"./containers/App.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}